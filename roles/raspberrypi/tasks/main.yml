---
- name: Update package cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  apt:
    name:
      - python3-pip
      - python3-dev
      - python3-venv
      - git
      - vim
      - htop
      - xorg
      - xinit
      - x11-xserver-utils
      - openbox
      - lightdm
      - xfce4-session
    state: present

- name: Configure SSH to allow password authentication initially
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication yes'
    backup: yes
  notify: restart ssh

- name: Create Python virtual environment
  command: python3 -m venv /home/pi/pygame_env
  args:
    creates: /home/pi/pygame_env/bin/activate
  become_user: pi

- name: Set ownership of virtual environment
  file:
    path: /home/pi/pygame_env
    owner: pi
    group: pi
    recurse: yes

- name: Install Python packages in virtual environment
  pip:
    name:
      - pygame
      - numpy
      - pillow
    virtualenv: /home/pi/pygame_env
    virtualenv_command: python3 -m venv
  become_user: pi

- name: Copy boot configuration for dual HDMI
  template:
    src: config.txt.j2
    dest: /boot/firmware/config.txt
    backup: no
  notify: reboot required

- name: Create X11 configuration for dual displays
  copy:
    content: |
      Section "ServerLayout"
          Identifier     "DualHead"
          Screen      0  "Screen0" 0 0
          Screen      1  "Screen1" RightOf "Screen0"
      EndSection

      Section "Monitor"
          Identifier   "HDMI-1"
          Option       "Primary" "true"
      EndSection

      Section "Monitor"
          Identifier   "HDMI-2"
          Option       "Primary" "false"
      EndSection

      Section "Device"
          Identifier  "Card0"
          Driver      "modesetting"
          Option      "kmsdev" "/dev/dri/card0"
      EndSection

      Section "Screen"
          Identifier "Screen0"
          Device     "Card0"
          Monitor    "HDMI-1"
          DefaultDepth 24
          SubSection "Display"
              Depth    24
              Modes    "1920x1080"
          EndSubSection
      EndSection

      Section "Screen"
          Identifier "Screen1"
          Device     "Card0"
          Monitor    "HDMI-2"
          DefaultDepth 24
          SubSection "Display"
              Depth    24
              Modes    "1920x1080"
          EndSubSection
      EndSection
    dest: /etc/X11/xorg.conf.d/99-dual-hdmi.conf
    owner: root
    group: root
    mode: '0644'

- name: Enable and start lightdm display manager
  systemd:
    name: lightdm
    enabled: yes
    state: started

- name: Create X11 startup script for second display
  copy:
    content: |
      #!/bin/bash
      # Start X11 on second display for pygame
      export DISPLAY=:0.1
      startx /usr/bin/openbox-session -- :0 -layout DualHead vt7
    dest: /home/pi/start_x11_display2.sh
    owner: pi
    group: pi
    mode: '0755'

- name: Disable WiFi service
  systemd:
    name: wpa_supplicant
    enabled: no
    state: stopped
  ignore_errors: yes

- name: Create pygame display script directory
  file:
    path: /home/pi/scripts
    state: directory
    owner: pi
    group: pi
    mode: '0755'

- name: Create sample pygame script for HDMI 2
  copy:
    content: |
      #!/home/pi/pygame_env/bin/python3
      import pygame
      import os
      import sys
      import time
      
      def main():
          print("Starting pygame on second HDMI display...")
          
          # Set up environment for X11 on second display
          os.environ['DISPLAY'] = ':0'
          os.environ['SDL_VIDEODRIVER'] = 'x11'
          os.environ['SDL_AUDIODRIVER'] = 'dummy'
          
          # Initialize pygame
          pygame.mixer.pre_init(frequency=0, size=0, channels=0, buffer=0)
          pygame.init()
          
          try:
              # Create fullscreen display on second monitor
              screen = pygame.display.set_mode((1920, 1080), pygame.FULLSCREEN)
              pygame.display.set_caption("HDMI Port 2 - Pygame Display")
              
              print("Successfully created display on second HDMI!")
              print(f"Screen size: {screen.get_width()}x{screen.get_height()}")
              
              clock = pygame.time.Clock()
              running = True
              frame_count = 0
              
              print("Display running. Press Ctrl+C to exit.")
              
              while running:
                  # Handle events
                  for event in pygame.event.get():
                      if event.type == pygame.QUIT:
                          running = False
                      elif event.type == pygame.KEYDOWN:
                          if event.key == pygame.K_ESCAPE or event.key == pygame.K_q:
                              running = False
                  
                  # Animated background
                  color_value = int((time.time() * 50) % 255)
                  screen.fill((color_value, 100, 255 - color_value))
                  
                  # Draw text
                  font = pygame.font.Font(None, 74)
                  text = font.render(f"HDMI Port 2 - Frame {frame_count}", True, (255, 255, 255))
                  text_rect = text.get_rect(center=(screen.get_width()//2, screen.get_height()//2))
                  screen.blit(text, text_rect)
                  
                  # Instructions
                  small_font = pygame.font.Font(None, 36)
                  instruction = small_font.render("Press ESC or Q to exit", True, (255, 255, 255))
                  screen.blit(instruction, (50, 50))
                  
                  pygame.display.flip()
                  clock.tick(60)
                  frame_count += 1
                  
                  # Status update
                  if frame_count % 300 == 0:
                      print(f"Frame {frame_count} - Running on HDMI 2")
              
          except Exception as e:
              print(f"Error: {e}")
              print("\nTo fix:")
              print("1. Start X11 first: ./start_x11_display2.sh")
              print("2. Then run: DISPLAY=:0.1 python3 scripts/hdmi2_display.py")
              import traceback
              traceback.print_exc()
          finally:
              pygame.quit()
              print("pygame display closed")
      
      if __name__ == "__main__":
          main()
    dest: /home/pi/scripts/hdmi2_display.py
    owner: pi
    group: pi
    mode: '0755'

- name: Create simple startup script
  copy:
    content: |
      #!/bin/bash
      echo "Running pygame on second HDMI display..."
      
      # Wait for X11 to be ready
      while ! xset q &>/dev/null; do
          echo "Waiting for X11 to start..."
          sleep 2
      done
      
      # Set display and run pygame
      export DISPLAY=:0
      cd /home/pi
      source pygame_env/bin/activate
      python3 scripts/hdmi2_display.py
    dest: /home/pi/run_pygame.sh
    owner: pi
    group: pi
    mode: '0755'

